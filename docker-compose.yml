version: "3.7"

networks:
  devops_training_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.235.0/24

volumes:
  registry-data:
  jenkins-data:
  artifactory-data:
  jenkins-docker-certs:
  docker-graph-storage:
  postgresql-vol:
  sonarqube-vol:

services:

  

  registry:
    image: registry:2
    ports:
    - "5000:5000"
    networks:
      devops_training_net:
        aliases: 
          - local-registry
    environment:
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /data
    volumes:
      - registry-data:/data

  dind:
    image: docker:dind
    privileged: true
    restart: always
    networks:
      devops_training_net:
        aliases: 
          - docker
    ports:
      - 2376:2376
    tty: true
    volumes:
      - docker-graph-storage:/var/lib/docker
      - jenkins-data:/var/jenkins_home
      - jenkins-docker-certs:/certs/client
      - $HOME:/home
    environment:
      - DOCKER_TLS_CERTDIR=/certs

  ## TO TEST JENKINS PIPELINE
  ssh-agent:
      image: jenkins/ssh-agent
      
  jenkins:
    build: 
      context: ./jenkins/.
      dockerfile: Dockerfile
    restart: on-failure
    networks:
      - devops_training_net
    hostname: jenkins
    ports:
      - 127.0.0.1:2345:2345
      - 8080:8080
      - 50000:50000
    depends_on:
      - dind
    tty: true
    volumes:
      - jenkins-data:/var/jenkins_home
      - jenkins-docker-certs:/certs/client:ro
      #- $HOME:/home
    environment:
      - DOCKER_HOST=tcp://docker:2376
      - DOCKER_CERT_PATH=/certs/client
      - DOCKER_TLS_VERIFY=1
      - SONARQUBE_HOST=http://172.16.235.10:9000

 
  github-runner:
    build:
      context: github-runner
      args:
        RUNNER_VERSION: '2.314.1'
    depends_on:
      - dind
    networks:
      - devops_training_net
    environment:
      REPO: contreras-adr/devops-training-python-project
      TOKEN: A6CZQVQC267WFGXOLAPGV6DF45SJM
      DOCKER_HOST: tcp://docker:2376
      DOCKER_CERT_PATH: /certs/client
      DOCKER_TLS_VERIFY: 1
  
  artifactory:
    image: sonatype/nexus3
    ports:
      - "40081:8081"
    volumes:
      - artifactory-data:/nexus-data
    networks:
      devops_training_net:
        ipv4_address: 172.16.235.4
        aliases: 
          - artifactory
    hostname: artifactory
    restart: always

  sonarqube:
    image: sonarqube:9.9.0-community
    depends_on:
      - sonardb
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonardb:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube-vol:/opt/sonarqube
    ports:
      - "9009:9000"
    hostname: sonarqube
    networks:
      devops_training_net:
        ipv4_address: 172.16.235.10
        aliases: 
          - sonarqube

  sonardb:
    image: postgres:12
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - postgresql-vol:/var/lib/postgresql
    hostname: sonardb
    networks:
      devops_training_net:
        aliases: 
          - sonardb